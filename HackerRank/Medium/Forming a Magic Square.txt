public static int formingMagicSquare(List<List<int>> s)
{
    // All possible 3x3 magic squares
    int[][] magicSquares = new int[][]
    {
        new int[] {8, 1, 6, 3, 5, 7, 4, 9, 2},
        new int[] {6, 1, 8, 7, 5, 3, 2, 9, 4},
        new int[] {4, 9, 2, 3, 5, 7, 8, 1, 6},
        new int[] {2, 9, 4, 7, 5, 3, 6, 1, 8},
        new int[] {8, 3, 4, 1, 5, 9, 6, 7, 2},
        new int[] {4, 3, 8, 9, 5, 1, 2, 7, 6},
        new int[] {6, 7, 2, 1, 5, 9, 8, 3, 4},
        new int[] {2, 7, 6, 9, 5, 1, 4, 3, 8}
    };

    // Flatten input 2D array into 1D array
    int[] flatInput = s.SelectMany(row => row).ToArray();

    int minCost = int.MaxValue;

    // Compare the input square to each magic square
    foreach (var magicSquare in magicSquares)
    {
        int cost = 0;
        for (int i = 0; i < 9; i++)
        {
            cost += Math.Abs(flatInput[i] - magicSquare[i]);
        }
        minCost = Math.Min(minCost, cost);
    }

    return minCost;
}
